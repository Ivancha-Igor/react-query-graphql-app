{"version":3,"sources":["graphql/getClients.ts","graphql/addClient.ts","graphql/updateClient.ts","components/Modal.tsx","components/ClientItem.tsx","components/Loading.tsx","components/Error.tsx","components/Fetching.tsx","components/ClientsList.tsx","hooks/useModal.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_CLIENTS","gql","addNewClient","formData","a","request","firstName","lastName","phone","avatarUrl","data","updateCurrentClient","id","Modal","open","hide","client","setCurrentClient","refetch","useForm","register","handleSubmit","reset","errors","formState","useEffect","add","useMutation","update","onSubmit","mutateAsync","clear","Root","show","as","Fragment","static","className","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","aria-hidden","Title","placeholder","defaultValue","required","maxLength","type","onClick","ClientItem","src","alt","Loading","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Error","Fetching","ClientsList","useState","setOpen","toggleModal","prev","useModal","currentClient","fetchClients","getClients","useQuery","isLoading","isFetching","error","event","preventDefault","scope","map","editClient","queryClient","QueryClient","App","QueryClientProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3d9935.chunk.js","sourcesContent":["import { gql } from 'graphql-request';\n\nexport const GET_CLIENTS = gql`\n  query {\n    getClients {\n      id\n      firstName\n      lastName\n      phone\n      avatarUrl\n    }\n  }\n`;","import { gql, request } from 'graphql-request';\nconst endpoint = 'https://test-task.expane.pro/api/graphql';\n\nexport const addNewClient = async (formData: any) => {\n  const data = await request(\n    endpoint,\n    gql`\n      mutation {\n        addClient(firstName: \"${formData.firstName}\", lastName: \"${formData.lastName}\", phone: \"${formData.phone}\", avatarUrl: \"${formData.avatarUrl}\") {\n          firstName\n          lastName\n          phone\n          avatarUrl\n        }\n      }\n    `\n  );\n  return data;\n};\n","import { gql, request } from 'graphql-request';\nconst endpoint = 'https://test-task.expane.pro/api/graphql';\n\nexport const updateCurrentClient = async (formData: any) => {\n  const data = await request(\n    endpoint,\n    gql`\n      mutation {\n        updateClient(id: \"${formData.id}\", firstName: \"${formData.firstName}\", lastName: \"${formData.lastName}\", phone: \"${formData.phone}\", avatarUrl: \"${formData.avatarUrl}\") {\n          id\n          firstName\n          lastName\n          phone\n          avatarUrl\n        }\n      }\n    `\n  );\n  return data;\n};\n","import { Fragment, FC, SetStateAction, Dispatch, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { Dialog, Transition } from '@headlessui/react';\n\nimport { IClient } from '../types/types';\nimport { addNewClient } from '../graphql/addClient';\nimport { updateCurrentClient } from '../graphql/updateClient';\n\ninterface IModalProps {\n  open: boolean;\n  hide: () => void;\n  client: IClient | null;\n  refetch: () => void;\n  setCurrentClient: Dispatch<SetStateAction<IClient | null>>;\n}\n\ninterface IFormInput {\n  firstName: string;\n  lastName: string;\n  phone: string;\n  avatarUrl: string;\n}\n\nexport const Modal: FC<IModalProps> = ({\n  open,\n  hide,\n  client,\n  setCurrentClient,\n  refetch,\n}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<IFormInput>();\n\n  useEffect(() => {\n    reset();\n    setCurrentClient(client)\n  }, [client, setCurrentClient, reset]);\n\n  const add = useMutation(addNewClient);\n  const update = useMutation(updateCurrentClient);\n\n  const onSubmit = async (formData: IFormInput) => {\n    if (client) {\n      await update.mutateAsync({ id: client.id, ...formData });\n    } else {\n      await add.mutateAsync(formData);\n    }\n    refetch();\n  };\n\n  const clear = () => {\n    setCurrentClient(null);\n    reset();\n    refetch();\n    hide();\n  };\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        open={open}\n        onClose={clear}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className='hidden sm:inline-block sm:align-middle sm:h-screen'\n            aria-hidden='true'\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full'>\n              <div className='bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4'>\n                <div className='mt-3 flex justify-center items-center'>\n                  <Dialog.Title\n                    as='h3'\n                    className='text-lg leading-6 font-medium text-gray-900 text-center mb-4'\n                  >\n                    {client ? 'Edit' : 'Add'}\n                  </Dialog.Title>\n                </div>\n              </div>\n              <form className='px-4' onSubmit={handleSubmit(onSubmit)}>\n                <div className='mb-4 flex flex-col'>\n                  <input\n                    className='px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full'\n                    placeholder='First Name'\n                    defaultValue={client?.firstName}\n                    {...register('firstName', {\n                      required: true,\n                      maxLength: 20,\n                    })}\n                  />\n                  {errors?.firstName && (\n                    <p className='text-red-800'>\n                      First Name is required, max length is 20\n                    </p>\n                  )}\n                </div>\n\n                <div className='mb-4 flex flex-col'>\n                  <input\n                    className='px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full'\n                    placeholder='Last Name'\n                    defaultValue={client?.lastName}\n                    {...register('lastName', {\n                      required: true,\n                      maxLength: 20,\n                    })}\n                  />\n                  {errors?.lastName && (\n                    <p className='text-red-800'>\n                      Last Name is required, max length is 20\n                    </p>\n                  )}\n                </div>\n\n                <div className='mb-4 flex flex-col'>\n                  <input\n                    className='px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full'\n                    placeholder='Phone number'\n                    type='number'\n                    defaultValue={client?.phone}\n                    {...register('phone')}\n                  />\n                  {errors?.phone && <p className='text-red-800'>Only numbers</p>}\n                </div>\n\n                <div className='mb-4 flex flex-col'>\n                  <input\n                    className='px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-sm shadow outline-none focus:outline-none focus:shadow-outline w-full'\n                    placeholder='Link to Avatar'\n                    defaultValue={client?.avatarUrl}\n                    {...register('avatarUrl')}\n                  />\n                  {errors?.avatarUrl && (\n                    <p className='text-red-800'>Add link to image</p>\n                  )}\n                </div>\n\n                <div className='bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:justify-end'>\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm'\n                    onClick={clear}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type='submit'\n                    className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-300 text-base font-medium text-white hover:bg-blue-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm'\n                    onClick={hide}\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n};\n","import { FC } from 'react';\nimport { IClient } from '../types/types';\n\ninterface IClientItem {\n  client: IClient\n}\n\nconst defaultAvatar =\n  'https://iupac.org/wp-content/uploads/2018/05/default-avatar.png';\n\nexport const ClientItem: FC<IClientItem> = ({ client }) => {\n  return (\n    <>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <img\n          className='h-10 w-10 rounded-full truncate'\n          src={client.avatarUrl ? client.avatarUrl : defaultAvatar}\n          alt={`${client.firstName} ${client.lastName}`}\n        />\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='text-sm font-medium text-gray-900'>\n          {client.firstName} {client.lastName}\n        </div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='text-sm text-gray-900'>\n          {client.phone ? client.phone : '-'}\n        </div>\n      </td>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const Loading: FC = () => (\n  <div className='border border-light-blue-300 shadow rounded-md p-4 max-w-sm w-full mx-auto flex justify-center items-center'>\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      className='animate-spin h-6 w-6'\n      fill='none'\n      viewBox='0 0 24 24'\n      stroke='currentColor'\n    >\n      <path\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeWidth='2'\n        d='M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15'\n      />\n    </svg>\n    <span>Loading...</span>\n  </div>\n);\n","import { FC } from 'react';\n\nexport const Error: FC = () => (\n  <div className='border border-red-600 shadow rounded-md p-4 max-w-sm w-full mx-auto text-center text-red-600'>\n    Something went wrong!\n  </div>\n);\n","import { FC } from 'react';\n\nexport const Fetching: FC = () => (\n  <div className='border border-light-blue-300 shadow rounded-md p-4 max-w-sm w-full mx-auto flex justify-center items-center'>\n    Update...\n  </div>\n);\n","import { FC, useState } from 'react';\nimport { request } from 'graphql-request';\nimport { useQuery } from 'react-query';\n\nimport { IClient } from '../types/types';\nimport { GET_CLIENTS } from '../graphql/getClients';\nimport { useModal } from '../hooks/useModal';\nimport { Modal } from './Modal';\nimport { ClientItem } from './ClientItem';\nimport { Loading } from './Loading';\nimport { Error } from './Error';\nimport { Fetching } from './Fetching';\n\nconst endpoint = 'https://test-task.expane.pro/api/graphql';\n\nexport const ClientsList: FC = () => {\n  const { open, toggleModal } = useModal();\n  const [currentClient, setCurrentClient] = useState<IClient | null>(null);\n\n  const fetchClients = async () => {\n    const { getClients: data } = await request(endpoint, GET_CLIENTS);\n    return data;\n  };\n\n  const { data, isLoading, isFetching, error, refetch } = useQuery<IClient[]>(\n    'clients',\n    fetchClients\n  );\n\n  const editClient = (event: React.MouseEvent<HTMLButtonElement>, client: IClient) => {\n    event.preventDefault();\n    setCurrentClient(client);\n    \n    toggleModal();\n  };\n\n  const addClient = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setCurrentClient(null);\n    \n    toggleModal();\n  };\n\n  if (isLoading) return <Loading />;\n\n  if (error) return <Error />;\n  \n  return (\n    <div className='flex flex-col max-w-xl mx-auto'>\n      <div className='-my-2 sm:-mx-6 lg:-mx-8'>\n        <div className='py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n          <div className='shadow overflow-hidden border-b border-gray-200 sm:rounded-lg'>\n            <div className='flex justify-center items-center bg-blue-50 px-6 py-4'>\n              <h2 className='text-2xl font-bold leading-7 text-gray-900 text-center m-auto'>\n                Clients List\n              </h2>\n              <button\n                type='button'\n                onClick={addClient}\n                className='inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-300 text-base font-medium text-white hover:bg-blue-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n              >\n                Add\n              </button>\n            </div>\n            <table className='max-w-lg min-w-full mx-auto divide-y divide-gray-200'>\n              <thead className='bg-gray-50'>\n                <tr>\n                  <th\n                    scope='col'\n                    className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                  >\n                    Avatar\n                  </th>\n                  <th\n                    scope='col'\n                    className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                  >\n                    Name\n                  </th>\n                  <th\n                    scope='col'\n                    className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'\n                  >\n                    Phone\n                  </th>\n                  <th scope='col' className='relative px-6 py-3'>\n                    <span className='sr-only'>Edit</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className='bg-white divide-y divide-gray-200'>\n                {data?.map((client) => (\n                  <tr key={client.id}>\n                    <ClientItem client={client} />\n                    <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n                      <button\n                        type='button'\n                        onClick={(event) => editClient(event, client)}\n                        className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-300 text-base font-medium text-white hover:bg-blue-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n                      >\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      {isFetching && <Fetching />}\n      <Modal open={open} hide={toggleModal} client={currentClient} setCurrentClient={setCurrentClient} {...{refetch}} />\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const useModal = () => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  function toggleModal() {\n    setOpen((prev) => !prev);\n  }\n  return {\n    open,\n    toggleModal,\n  };\n};\n","import { QueryClient, QueryClientProvider } from 'react-query';\nimport { ClientsList } from './components/ClientsList';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <div className='p-8 bg-gray-200 min-h-screen'>\n      <QueryClientProvider client={queryClient}>\n        <ClientsList />\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}